# -*- coding: utf-8 -*-
"""reviewType_train_phobert.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Dpo3zgiJ8Q1gGeRhrLtNGWOFfUKGYdnA
"""

import reviewtype_utility_functions as rcuf
import pandas as pd
pd.options.mode.chained_assignment = None
import numpy as np
import random
import torch
from transformers import BertTokenizer, logging
from transformers import AutoModel, AutoTokenizer
import altair as alt
alt.renderers.enable('default')
import warnings
warnings.filterwarnings('ignore')
no_deprecation_warning=True
logging.set_verbosity_error()

MAX_LEN = 256
RANDOM_SEED = 42
random.seed(RANDOM_SEED)
np.random.seed(RANDOM_SEED)
torch.manual_seed(RANDOM_SEED)
torch.cuda.manual_seed_all(RANDOM_SEED)

device = torch.device("cuda:0" if torch.cuda.is_available() else "cpu")

hidden_dropout_prob = 0.4
attention_probs_dropout_prob = 0.1
pre_trained_model = 'vinai/phobert-base'
model_type = pre_trained_model.split('/')[0]
batch_size = 8
epochs = 1
Ir = 1e-5
eps = 1e-8
train_data_provider = 'Suwasit'

if __name__ == '__main__':

    import argparse

    parser = argparse.ArgumentParser()
    parser.add_argument('input_file', help='sentiment analysis reviews label data with train and validation split(csv)')
    args = parser.parse_args()

    reviews_label_df = pd.read_csv(args.input_file)
    df_train=reviews_label_df[reviews_label_df.data_category=='train']
    df_test=reviews_label_df[reviews_label_df.data_category=='test']
    df_val=reviews_label_df[reviews_label_df.data_category=='val']

    tokenizer = AutoTokenizer.from_pretrained("vinai/phobert-base")


    dataloader_train= rcuf.create_data_loader(df_train, tokenizer, MAX_LEN, batch_size)
    dataloader_validation = rcuf.create_data_loader(df_val, tokenizer, MAX_LEN, batch_size)
    dataloader_test = rcuf.create_data_loader(df_test, tokenizer, MAX_LEN, batch_size)

    model = rcuf.build_Bert_model(pre_trained_model, attention_probs_dropout_prob, hidden_dropout_prob)
    model_path =  '/content/drive/MyDrive/git_pipeline_capstone/reviewtype_phobert_model.pt'
    torch.save(model.state_dict(), model_path)

    eval_df, model = rcuf.train_model_phobert(model, model_path,pre_trained_model, model_type, Ir, eps, attention_probs_dropout_prob, hidden_dropout_prob,
                                      epochs, batch_size, dataloader_train, dataloader_validation, train_data_provider)
    eval_df_path = '/content/drive/MyDrive/git_pipeline_capstone/reviewtype_pho_bert_eval_df.csv'
    eval_df.to_csv(eval_df_path , index=False)